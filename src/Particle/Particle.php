<?php

// This file is automatically generated. Do not edit manually.

namespace Nirbose\PhpMcServ\Particle;

use Nirbose\PhpMcServ\Block\Data\BlockData;
use Nirbose\PhpMcServ\Inventory\ItemStack;
use Nirbose\PhpMcServ\Particle\Vibration\VibrationParticle;
use Nirbose\PhpMcServ\Utils\Color;

enum Particle: int
{
    case ANGRY_VILLAGER = 0;
    case BLOCK = 1;
    case BLOCK_MARKER = 2;
    case BUBBLE = 3;
    case CLOUD = 4;
    case CRIT = 5;
    case DAMAGE_INDICATOR = 6;
    case DRAGON_BREATH = 7;
    case DRIPPING_LAVA = 8;
    case FALLING_LAVA = 9;
    case LANDING_LAVA = 10;
    case DRIPPING_WATER = 11;
    case FALLING_WATER = 12;
    case DUST = 13;
    case DUST_COLOR_TRANSITION = 14;
    case EFFECT = 15;
    case ELDER_GUARDIAN = 16;
    case ENCHANTED_HIT = 17;
    case ENCHANT = 18;
    case END_ROD = 19;
    case ENTITY_EFFECT = 20;
    case EXPLOSION_EMITTER = 21;
    case EXPLOSION = 22;
    case GUST = 23;
    case SMALL_GUST = 24;
    case GUST_EMITTER_LARGE = 25;
    case GUST_EMITTER_SMALL = 26;
    case SONIC_BOOM = 27;
    case FALLING_DUST = 28;
    case FIREWORK = 29;
    case FISHING = 30;
    case FLAME = 31;
    case INFESTED = 32;
    case CHERRY_LEAVES = 33;
    case PALE_OAK_LEAVES = 34;
    case TINTED_LEAVES = 35;
    case SCULK_SOUL = 36;
    case SCULK_CHARGE = 37;
    case SCULK_CHARGE_POP = 38;
    case SOUL_FIRE_FLAME = 39;
    case SOUL = 40;
    case FLASH = 41;
    case HAPPY_VILLAGER = 42;
    case COMPOSTER = 43;
    case HEART = 44;
    case INSTANT_EFFECT = 45;
    case ITEM = 46;
    case VIBRATION = 47;
    case TRAIL = 48;
    case ITEM_SLIME = 49;
    case ITEM_COBWEB = 50;
    case ITEM_SNOWBALL = 51;
    case LARGE_SMOKE = 52;
    case LAVA = 53;
    case MYCELIUM = 54;
    case NOTE = 55;
    case POOF = 56;
    case PORTAL = 57;
    case RAIN = 58;
    case SMOKE = 59;
    case WHITE_SMOKE = 60;
    case SNEEZE = 61;
    case SPIT = 62;
    case SQUID_INK = 63;
    case SWEEP_ATTACK = 64;
    case TOTEM_OF_UNDYING = 65;
    case UNDERWATER = 66;
    case SPLASH = 67;
    case WITCH = 68;
    case BUBBLE_POP = 69;
    case CURRENT_DOWN = 70;
    case BUBBLE_COLUMN_UP = 71;
    case NAUTILUS = 72;
    case DOLPHIN = 73;
    case CAMPFIRE_COSY_SMOKE = 74;
    case CAMPFIRE_SIGNAL_SMOKE = 75;
    case DRIPPING_HONEY = 76;
    case FALLING_HONEY = 77;
    case LANDING_HONEY = 78;
    case FALLING_NECTAR = 79;
    case FALLING_SPORE_BLOSSOM = 80;
    case ASH = 81;
    case CRIMSON_SPORE = 82;
    case WARPED_SPORE = 83;
    case SPORE_BLOSSOM_AIR = 84;
    case DRIPPING_OBSIDIAN_TEAR = 85;
    case FALLING_OBSIDIAN_TEAR = 86;
    case LANDING_OBSIDIAN_TEAR = 87;
    case REVERSE_PORTAL = 88;
    case WHITE_ASH = 89;
    case SMALL_FLAME = 90;
    case SNOWFLAKE = 91;
    case DRIPPING_DRIPSTONE_LAVA = 92;
    case FALLING_DRIPSTONE_LAVA = 93;
    case DRIPPING_DRIPSTONE_WATER = 94;
    case FALLING_DRIPSTONE_WATER = 95;
    case GLOW_SQUID_INK = 96;
    case GLOW = 97;
    case WAX_ON = 98;
    case WAX_OFF = 99;
    case ELECTRIC_SPARK = 100;
    case SCRAPE = 101;
    case SHRIEK = 102;
    case EGG_CRACK = 103;
    case DUST_PLUME = 104;
    case TRIAL_SPAWNER_DETECTION = 105;
    case TRIAL_SPAWNER_DETECTION_OMINOUS = 106;
    case VAULT_CONNECTION = 107;
    case DUST_PILLAR = 108;
    case OMINOUS_SPAWNING = 109;
    case RAID_OMEN = 110;
    case TRIAL_OMEN = 111;
    case BLOCK_CRUMBLE = 112;
    case FIREFLY = 113;

    /**
     * @return class-string|null
     */
    public function getDataClass(): string|null
    {
        return match ($this) {
            Particle::BLOCK, Particle::BLOCK_MARKER, Particle::FALLING_DUST, Particle::DUST_PILLAR, Particle::BLOCK_CRUMBLE => BlockData::class,
            Particle::DUST => DustParticle::class,
            Particle::DUST_COLOR_TRANSITION => DustColorTransitionParticle::class,
            Particle::ENTITY_EFFECT, Particle::TINTED_LEAVES => Color::class,
            Particle::SCULK_CHARGE => 'float',
            Particle::ITEM => ItemStack::class,
            Particle::VIBRATION => VibrationParticle::class,
            Particle::TRAIL => TrailParticle::class,
            Particle::SHRIEK => 'varint',
            default => null,
        };
    }
}
